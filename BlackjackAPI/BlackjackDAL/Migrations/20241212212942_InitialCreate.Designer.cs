// <auto-generated />
using System;
using BlackjackDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlackjackDAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241212212942_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BlackjackCommon.Entities.Friend.Friend", b =>
                {
                    b.Property<int>("friend_user_id")
                        .HasColumnType("int")
                        .HasColumnName("friend_user_id");

                    b.Property<int>("friend_befriend_user_id")
                        .HasColumnType("int")
                        .HasColumnName("friend_befriend_user_id");

                    b.HasKey("friend_user_id", "friend_befriend_user_id");

                    b.ToTable("Friend");
                });

            modelBuilder.Entity("BlackjackCommon.Entities.Friend_Request.Friend_Request", b =>
                {
                    b.Property<int>("friend_user_id")
                        .HasColumnType("int")
                        .HasColumnName("friend_user_id");

                    b.Property<int>("friend_befriend_user_id")
                        .HasColumnType("int")
                        .HasColumnName("friend_befriend_user_id");

                    b.Property<DateTime>("friend_datetime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("friend_datetime");

                    b.Property<string>("friend_status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("friend_status");

                    b.HasKey("friend_user_id", "friend_befriend_user_id");

                    b.ToTable("Friend_Request");
                });

            modelBuilder.Entity("BlackjackCommon.Entities.History.History", b =>
                {
                    b.Property<int>("history_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("history_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("history_id"));

                    b.Property<string>("history_action")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("history_action");

                    b.Property<DateTime>("history_datetime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("history_datetime");

                    b.Property<string>("history_group_id")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("history_group_id");

                    b.Property<string>("history_payload")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("history_payload");

                    b.Property<string>("history_result")
                        .HasColumnType("longtext")
                        .HasColumnName("history_result");

                    b.Property<int>("history_round_number")
                        .HasColumnType("int")
                        .HasColumnName("history_round_number");

                    b.Property<int?>("history_user_id")
                        .HasColumnType("int")
                        .HasColumnName("history_user_id");

                    b.HasKey("history_id");

                    b.ToTable("history");
                });

            modelBuilder.Entity("BlackjackCommon.Entities.Message.Message", b =>
                {
                    b.Property<int>("message_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("message_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("message_id"));

                    b.Property<string>("message_content")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("message_content");

                    b.Property<DateTime>("message_datetime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("message_datetime");

                    b.Property<bool>("message_deleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("message_deleted");

                    b.Property<string>("message_group")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("message_group");

                    b.Property<int?>("message_receiver")
                        .HasColumnType("int")
                        .HasColumnName("message_receiver");

                    b.Property<int>("message_sender")
                        .HasColumnType("int")
                        .HasColumnName("message_sender");

                    b.HasKey("message_id");

                    b.ToTable("message");
                });

            modelBuilder.Entity("BlackjackCommon.Entities.User.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("user_id"));

                    b.Property<int>("user_balance")
                        .HasColumnType("int")
                        .HasColumnName("user_balance");

                    b.Property<bool>("user_is_moderator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("user_is_moderator");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.Property<string>("user_passwordhash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_passwordhash");

                    b.Property<string>("user_passwordsalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_passwordsalt");

                    b.Property<DateTime?>("user_punishment_till")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("user_punishment_till");

                    b.Property<string>("user_status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("active")
                        .HasColumnName("user_status");

                    b.Property<int?>("user_total_earnings_amt")
                        .HasColumnType("int")
                        .HasColumnName("user_total_earnings_amt");

                    b.Property<int?>("user_total_losses_amt")
                        .HasColumnType("int")
                        .HasColumnName("user_total_losses_amt");

                    b.Property<TimeSpan?>("user_total_playtime")
                        .HasColumnType("time(6)")
                        .HasColumnName("user_total_playtime");

                    b.HasKey("user_id");

                    b.ToTable("user");
                });
#pragma warning restore 612, 618
        }
    }
}
